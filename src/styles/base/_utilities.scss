@use "../abstracts" as *;

/* Utility Classes */
// Padding
@each $key, $value in $sizes {
  .u-ps-#{$key} {
    padding-inline-start: var(unquote("--spacer-" + #{$key}));
  }
  .u-pe-#{$key} {
    padding-inline-end: var(unquote("--spacer-" + #{$key}));
  }
  .u-pt-#{$key} {
    padding-block-start: var(unquote("--spacer-" + #{$key}));
  }
  .u-pb-#{$key} {
    padding-block-end: var(unquote("--spacer-" + #{$key}));
  }
  .u-py-#{$key} {
    padding-block: var(unquote("--spacer-" + #{$key}));
  }
  .u-px-#{$key} {
    padding-inline: var(unquote("--spacer-" + #{$key}));
  }
}
// Margin
@each $key, $value in $sizes {
  .u-ms-#{$key} {
    margin-inline-start: var(unquote("--spacer-" + #{$key}));
  }
  .u-me-#{$key} {
    margin-inline-end: var(unquote("--spacer-" + #{$key}));
  }
  .u-mt-#{$key} {
    margin-block-start: var(unquote("--spacer-" + #{$key}));
  }
  .u-mb-#{$key} {
    margin-block-end: var(unquote("--spacer-" + #{$key}));
  }
  .u-my-#{$key} {
    margin-block: var(unquote("--spacer-" + #{$key}));
  }
  .u-mx-#{$key} {
    margin-inline: var(unquote("--spacer-" + #{$key}));
  }
}
// Text
.u-keyword {
  display: block;
  margin-block: var(--spacer-100);
  line-height: 1;
  font-family: var(--ff-sec);
  text-transform: uppercase;
  color: hsl(var(--clr-neu-100));
  line-break: anywhere;
}

@each $textStyle in $textStyles {
  .u-text-#{$textStyle} {
    text-transform: #{$textStyle};
  }
}

// Colors
@each $color, $colorVariants in $colors {
  @each $colorVariant, $value in $colorVariants {
    .u-text-#{$color}-#{$colorVariant} {
      color: hsl(
        var(unquote($string: "--clr-" + #{$color} + "-" + #{$colorVariant}))
      );
    }

    .u-bg-#{$color}-#{$colorVariant} {
      background-color: hsl(
        var(unquote($string: "--clr-" + #{$color} + "-" + #{$colorVariant}))
      );
    }
  }
}

// Fonts
@each $fontFamily, $value in $fontFamilies {
  .u-ff-#{$fontFamily} {
    font-family: unquote($string: $value);
  }
}

@each $fontWeight, $value in $fontWeights {
  .u-fw-#{$fontWeight} {
    font-weight: $value;
  }
}

@each $size, $value in $sizes {
  .u-fs-#{$size} {
    font-size: var(unquote($string: "--fs-" + #{$size}));
  }
}

// Screen Reader Only
.u-sr-only {
  @include screenReaderOnly();
}

// Structure
.u-section {
  padding-block: var(--spacer-1000);

  &:is([data-name="hero"], [data-height="fill"]) {
    min-height: 100vh;
    min-height: 100svh;
    @include flexCentering();
  }
}

.u-flex-between {
  @include flexBetween();
}

.u-flex-centering {
  @include flexCentering();
}

.u-grid-centering {
  @include gridCentering();
}

.u-margin-spacer {
  @include marginSpacer();
}

.u-flex-spacer {
  @include flexSpacer();
}

.u-grid-spacer {
  @include gridSpacer();
}

// A11y
.u-a11y-link {
  position: absolute;
  top: -200px;
  left: 50%;
  transform: translateX(-50%);
  display: block;
  z-index: map-get($zIndex, accessibilityLink);

  &:focus {
    top: 2rem;
  }
}
